version: '3.1'

services:
  web:
    container_name: oft-web
    image: 870906287853.dkr.ecr.us-east-2.amazonaws.com/openfortakeout/website:latest
    restart: always
    environment: 
      VIRTUAL_HOST: wereopenfortakeout.com,www.wereopenfortakeout.com
      LETSENCRYPT_HOST: wereopenfortakeout.com,www.wereopenfortakeout.com
    ports:
      - 80
    networks: 
      - internal
      - web
  api:
    container_name: oft-api
    image: 870906287853.dkr.ecr.us-east-2.amazonaws.com/openfortakeout/api:latest
    restart: always
    depends_on: 
      - db
    environment: 
      VIRTUAL_HOST: api.wereopenfortakeout.com
      LETSENCRYPT_HOST: api.wereopenfortakeout.com
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      PORT: ${PORT}
      ORIGIN: "https://wereopenfortakeout.com"
      DOCKER_VOL: ${DOCKER_VOL}
      MIGRATIONS: file:///migrations
      GEOCODIO_APIKEY: ${GEOCODIO_APIKEY}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      SLACK_TEAM_ID: ${SLACK_TEAM_ID}
      SLACK_CHANNEL_ID: ${SLACK_CHANNEL_ID}
      SENTRY_DSN: ${SENTRY_DSN}
    ports:
      - ${API_PORT}
    networks: 
      - internal
      - web
  db:
    container_name: oft-db
    image: postgis/postgis
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ${DOCKER_VOL}/postgres:/var/lib/postgresql/data
    networks: 
      - internal
networks:
  web:
      external: true
  internal:
      external: false

